
stm32f767xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004d4  080001f8  080001f8  000101f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006cc  080006d4  000106d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006cc  080006cc  000106d4  2**0
                  CONTENTS
  4 .ARM          00000000  080006cc  080006cc  000106d4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006cc  080006d4  000106d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006cc  080006cc  000106cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006d0  080006d0  000106d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000106d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080006d4  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080006d4  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000106d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000767  00000000  00000000  000106fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001c3  00000000  00000000  00010e65  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000a8  00000000  00000000  00011028  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000080  00000000  00000000  000110d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00001281  00000000  00000000  00011150  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000a6a  00000000  00000000  000123d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00004d12  00000000  00000000  00012e3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00017b4d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001d4  00000000  00000000  00017bc8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001f8 <__do_global_dtors_aux>:
 80001f8:	b510      	push	{r4, lr}
 80001fa:	4c05      	ldr	r4, [pc, #20]	; (8000210 <__do_global_dtors_aux+0x18>)
 80001fc:	7823      	ldrb	r3, [r4, #0]
 80001fe:	b933      	cbnz	r3, 800020e <__do_global_dtors_aux+0x16>
 8000200:	4b04      	ldr	r3, [pc, #16]	; (8000214 <__do_global_dtors_aux+0x1c>)
 8000202:	b113      	cbz	r3, 800020a <__do_global_dtors_aux+0x12>
 8000204:	4804      	ldr	r0, [pc, #16]	; (8000218 <__do_global_dtors_aux+0x20>)
 8000206:	f3af 8000 	nop.w
 800020a:	2301      	movs	r3, #1
 800020c:	7023      	strb	r3, [r4, #0]
 800020e:	bd10      	pop	{r4, pc}
 8000210:	20000000 	.word	0x20000000
 8000214:	00000000 	.word	0x00000000
 8000218:	080006b4 	.word	0x080006b4

0800021c <frame_dummy>:
 800021c:	b508      	push	{r3, lr}
 800021e:	4b03      	ldr	r3, [pc, #12]	; (800022c <frame_dummy+0x10>)
 8000220:	b11b      	cbz	r3, 800022a <frame_dummy+0xe>
 8000222:	4903      	ldr	r1, [pc, #12]	; (8000230 <frame_dummy+0x14>)
 8000224:	4803      	ldr	r0, [pc, #12]	; (8000234 <frame_dummy+0x18>)
 8000226:	f3af 8000 	nop.w
 800022a:	bd08      	pop	{r3, pc}
 800022c:	00000000 	.word	0x00000000
 8000230:	20000004 	.word	0x20000004
 8000234:	080006b4 	.word	0x080006b4

08000238 <main>:
#include "stm32f767xx_hal_gpio.h"

void delay(void);

int main(void)
{
 8000238:	b580      	push	{r7, lr}
 800023a:	b084      	sub	sp, #16
 800023c:	af00      	add	r7, sp, #0
	GPIO_Set_PClk(GPIOB, ENABLE);
 800023e:	2101      	movs	r1, #1
 8000240:	480c      	ldr	r0, [pc, #48]	; (8000274 <main+0x3c>)
 8000242:	f000 f857 	bl	80002f4 <GPIO_Set_PClk>

	GPIO_Handle_t GpioLed;

	GpioLed.pGPIOx = GPIOB;
 8000246:	4b0b      	ldr	r3, [pc, #44]	; (8000274 <main+0x3c>)
 8000248:	607b      	str	r3, [r7, #4]
	GpioLed.pinConfig.GPIO_PinNumber = GPIO_PIN_7;
 800024a:	2307      	movs	r3, #7
 800024c:	723b      	strb	r3, [r7, #8]
	GpioLed.pinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800024e:	2301      	movs	r3, #1
 8000250:	727b      	strb	r3, [r7, #9]
	GpioLed.pinConfig.GPIO_Out_Type = GPIO_OUT_PUSH_PULL;
 8000252:	2300      	movs	r3, #0
 8000254:	72bb      	strb	r3, [r7, #10]
	GpioLed.pinConfig.GPIO_PuPd = GPIO_NO_PU_PD;
 8000256:	2300      	movs	r3, #0
 8000258:	733b      	strb	r3, [r7, #12]
	GpioLed.pinConfig.GPIO_Out_Speed = GPIO_SPEED_LOW;
 800025a:	2300      	movs	r3, #0
 800025c:	72fb      	strb	r3, [r7, #11]

	GPIO_Init(&GpioLed);
 800025e:	1d3b      	adds	r3, r7, #4
 8000260:	4618      	mov	r0, r3
 8000262:	f000 f95f 	bl	8000524 <GPIO_Init>

	while(1)
	{
		GPIO_Toggle_Output_Pin(GPIOB, GPIO_PIN_7);
 8000266:	2107      	movs	r1, #7
 8000268:	4802      	ldr	r0, [pc, #8]	; (8000274 <main+0x3c>)
 800026a:	f000 f9eb 	bl	8000644 <GPIO_Toggle_Output_Pin>
		delay();
 800026e:	f000 f803 	bl	8000278 <delay>
		GPIO_Toggle_Output_Pin(GPIOB, GPIO_PIN_7);
 8000272:	e7f8      	b.n	8000266 <main+0x2e>
 8000274:	40020400 	.word	0x40020400

08000278 <delay>:
	}
}

void delay(void)
{
 8000278:	b480      	push	{r7}
 800027a:	b083      	sub	sp, #12
 800027c:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i < 500000; i++)
 800027e:	2300      	movs	r3, #0
 8000280:	607b      	str	r3, [r7, #4]
 8000282:	e002      	b.n	800028a <delay+0x12>
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	3301      	adds	r3, #1
 8000288:	607b      	str	r3, [r7, #4]
 800028a:	687b      	ldr	r3, [r7, #4]
 800028c:	4a03      	ldr	r2, [pc, #12]	; (800029c <delay+0x24>)
 800028e:	4293      	cmp	r3, r2
 8000290:	d9f8      	bls.n	8000284 <delay+0xc>
	{
		;
	}
}
 8000292:	bf00      	nop
 8000294:	370c      	adds	r7, #12
 8000296:	46bd      	mov	sp, r7
 8000298:	bc80      	pop	{r7}
 800029a:	4770      	bx	lr
 800029c:	0007a11f 	.word	0x0007a11f

080002a0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a0:	480d      	ldr	r0, [pc, #52]	; (80002d8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002a2:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002a4:	480d      	ldr	r0, [pc, #52]	; (80002dc <LoopForever+0x6>)
  ldr r1, =_edata
 80002a6:	490e      	ldr	r1, [pc, #56]	; (80002e0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002a8:	4a0e      	ldr	r2, [pc, #56]	; (80002e4 <LoopForever+0xe>)
  movs r3, #0
 80002aa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002ac:	e002      	b.n	80002b4 <LoopCopyDataInit>

080002ae <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ae:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002b2:	3304      	adds	r3, #4

080002b4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002b6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002b8:	d3f9      	bcc.n	80002ae <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ba:	4a0b      	ldr	r2, [pc, #44]	; (80002e8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002bc:	4c0b      	ldr	r4, [pc, #44]	; (80002ec <LoopForever+0x16>)
  movs r3, #0
 80002be:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c0:	e001      	b.n	80002c6 <LoopFillZerobss>

080002c2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002c2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c4:	3204      	adds	r2, #4

080002c6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002c6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002c8:	d3fb      	bcc.n	80002c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002ca:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80002ce:	f000 f9cd 	bl	800066c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002d2:	f7ff ffb1 	bl	8000238 <main>

080002d6 <LoopForever>:

LoopForever:
    b LoopForever
 80002d6:	e7fe      	b.n	80002d6 <LoopForever>
  ldr   r0, =_estack
 80002d8:	20080000 	.word	0x20080000
  ldr r0, =_sdata
 80002dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002e4:	080006d4 	.word	0x080006d4
  ldr r2, =_sbss
 80002e8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002ec:	2000001c 	.word	0x2000001c

080002f0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f0:	e7fe      	b.n	80002f0 <ADC_IRQHandler>
	...

080002f4 <GPIO_Set_PClk>:

#include "stm32f767xx_hal_gpio.h"
#include <stdint.h>

void GPIO_Set_PClk(GPIO_RegMap_t *pGPIOx, uint8_t state)
{
 80002f4:	b480      	push	{r7}
 80002f6:	b083      	sub	sp, #12
 80002f8:	af00      	add	r7, sp, #0
 80002fa:	6078      	str	r0, [r7, #4]
 80002fc:	460b      	mov	r3, r1
 80002fe:	70fb      	strb	r3, [r7, #3]
	if(state == ENABLE)
 8000300:	78fb      	ldrb	r3, [r7, #3]
 8000302:	2b01      	cmp	r3, #1
 8000304:	d178      	bne.n	80003f8 <GPIO_Set_PClk+0x104>
	{
		if(pGPIOx == GPIOA)
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	4a7a      	ldr	r2, [pc, #488]	; (80004f4 <GPIO_Set_PClk+0x200>)
 800030a:	4293      	cmp	r3, r2
 800030c:	d106      	bne.n	800031c <GPIO_Set_PClk+0x28>
		{
			GPIOA_CLK_EN();
 800030e:	4b7a      	ldr	r3, [pc, #488]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000310:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000312:	4a79      	ldr	r2, [pc, #484]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000314:	f043 0301 	orr.w	r3, r3, #1
 8000318:	6313      	str	r3, [r2, #48]	; 0x30
		}else if(pGPIOx == GPIOK)
		{
			GPIOK_CLK_DI();
		}
	}
}
 800031a:	e0e5      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOB)
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	4a77      	ldr	r2, [pc, #476]	; (80004fc <GPIO_Set_PClk+0x208>)
 8000320:	4293      	cmp	r3, r2
 8000322:	d106      	bne.n	8000332 <GPIO_Set_PClk+0x3e>
			GPIOB_CLK_EN();
 8000324:	4b74      	ldr	r3, [pc, #464]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000326:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000328:	4a73      	ldr	r2, [pc, #460]	; (80004f8 <GPIO_Set_PClk+0x204>)
 800032a:	f043 0302 	orr.w	r3, r3, #2
 800032e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000330:	e0da      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOC)
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	4a72      	ldr	r2, [pc, #456]	; (8000500 <GPIO_Set_PClk+0x20c>)
 8000336:	4293      	cmp	r3, r2
 8000338:	d106      	bne.n	8000348 <GPIO_Set_PClk+0x54>
			GPIOC_CLK_EN();
 800033a:	4b6f      	ldr	r3, [pc, #444]	; (80004f8 <GPIO_Set_PClk+0x204>)
 800033c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033e:	4a6e      	ldr	r2, [pc, #440]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000340:	f043 0304 	orr.w	r3, r3, #4
 8000344:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000346:	e0cf      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOD)
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	4a6e      	ldr	r2, [pc, #440]	; (8000504 <GPIO_Set_PClk+0x210>)
 800034c:	4293      	cmp	r3, r2
 800034e:	d106      	bne.n	800035e <GPIO_Set_PClk+0x6a>
			GPIOD_CLK_EN();
 8000350:	4b69      	ldr	r3, [pc, #420]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000352:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000354:	4a68      	ldr	r2, [pc, #416]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000356:	f043 0308 	orr.w	r3, r3, #8
 800035a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800035c:	e0c4      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOE)
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	4a69      	ldr	r2, [pc, #420]	; (8000508 <GPIO_Set_PClk+0x214>)
 8000362:	4293      	cmp	r3, r2
 8000364:	d106      	bne.n	8000374 <GPIO_Set_PClk+0x80>
			GPIOE_CLK_EN();
 8000366:	4b64      	ldr	r3, [pc, #400]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000368:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036a:	4a63      	ldr	r2, [pc, #396]	; (80004f8 <GPIO_Set_PClk+0x204>)
 800036c:	f043 0310 	orr.w	r3, r3, #16
 8000370:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000372:	e0b9      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOF)
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	4a65      	ldr	r2, [pc, #404]	; (800050c <GPIO_Set_PClk+0x218>)
 8000378:	4293      	cmp	r3, r2
 800037a:	d106      	bne.n	800038a <GPIO_Set_PClk+0x96>
			GPIOF_CLK_EN();
 800037c:	4b5e      	ldr	r3, [pc, #376]	; (80004f8 <GPIO_Set_PClk+0x204>)
 800037e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000380:	4a5d      	ldr	r2, [pc, #372]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000382:	f043 0320 	orr.w	r3, r3, #32
 8000386:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000388:	e0ae      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOG)
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	4a60      	ldr	r2, [pc, #384]	; (8000510 <GPIO_Set_PClk+0x21c>)
 800038e:	4293      	cmp	r3, r2
 8000390:	d106      	bne.n	80003a0 <GPIO_Set_PClk+0xac>
			GPIOG_CLK_EN();
 8000392:	4b59      	ldr	r3, [pc, #356]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000394:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000396:	4a58      	ldr	r2, [pc, #352]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000398:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800039c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800039e:	e0a3      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOH)
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	4a5c      	ldr	r2, [pc, #368]	; (8000514 <GPIO_Set_PClk+0x220>)
 80003a4:	4293      	cmp	r3, r2
 80003a6:	d106      	bne.n	80003b6 <GPIO_Set_PClk+0xc2>
			GPIOH_CLK_EN();
 80003a8:	4b53      	ldr	r3, [pc, #332]	; (80004f8 <GPIO_Set_PClk+0x204>)
 80003aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ac:	4a52      	ldr	r2, [pc, #328]	; (80004f8 <GPIO_Set_PClk+0x204>)
 80003ae:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003b2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b4:	e098      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOI)
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	4a57      	ldr	r2, [pc, #348]	; (8000518 <GPIO_Set_PClk+0x224>)
 80003ba:	4293      	cmp	r3, r2
 80003bc:	d106      	bne.n	80003cc <GPIO_Set_PClk+0xd8>
			GPIOI_CLK_EN();
 80003be:	4b4e      	ldr	r3, [pc, #312]	; (80004f8 <GPIO_Set_PClk+0x204>)
 80003c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c2:	4a4d      	ldr	r2, [pc, #308]	; (80004f8 <GPIO_Set_PClk+0x204>)
 80003c4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003c8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ca:	e08d      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOJ)
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	4a53      	ldr	r2, [pc, #332]	; (800051c <GPIO_Set_PClk+0x228>)
 80003d0:	4293      	cmp	r3, r2
 80003d2:	d106      	bne.n	80003e2 <GPIO_Set_PClk+0xee>
			GPIOJ_CLK_EN();
 80003d4:	4b48      	ldr	r3, [pc, #288]	; (80004f8 <GPIO_Set_PClk+0x204>)
 80003d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d8:	4a47      	ldr	r2, [pc, #284]	; (80004f8 <GPIO_Set_PClk+0x204>)
 80003da:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80003de:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e0:	e082      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOK)
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	4a4e      	ldr	r2, [pc, #312]	; (8000520 <GPIO_Set_PClk+0x22c>)
 80003e6:	4293      	cmp	r3, r2
 80003e8:	d17e      	bne.n	80004e8 <GPIO_Set_PClk+0x1f4>
			GPIOK_CLK_EN();
 80003ea:	4b43      	ldr	r3, [pc, #268]	; (80004f8 <GPIO_Set_PClk+0x204>)
 80003ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ee:	4a42      	ldr	r2, [pc, #264]	; (80004f8 <GPIO_Set_PClk+0x204>)
 80003f0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80003f4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f6:	e077      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		if(pGPIOx == GPIOA)
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	4a3e      	ldr	r2, [pc, #248]	; (80004f4 <GPIO_Set_PClk+0x200>)
 80003fc:	4293      	cmp	r3, r2
 80003fe:	d106      	bne.n	800040e <GPIO_Set_PClk+0x11a>
			GPIOA_CLK_DI();
 8000400:	4b3d      	ldr	r3, [pc, #244]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000402:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000404:	4a3c      	ldr	r2, [pc, #240]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000406:	f023 0301 	bic.w	r3, r3, #1
 800040a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800040c:	e06c      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOB)
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	4a3a      	ldr	r2, [pc, #232]	; (80004fc <GPIO_Set_PClk+0x208>)
 8000412:	4293      	cmp	r3, r2
 8000414:	d106      	bne.n	8000424 <GPIO_Set_PClk+0x130>
			GPIOB_CLK_DI();
 8000416:	4b38      	ldr	r3, [pc, #224]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000418:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041a:	4a37      	ldr	r2, [pc, #220]	; (80004f8 <GPIO_Set_PClk+0x204>)
 800041c:	f023 0302 	bic.w	r3, r3, #2
 8000420:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000422:	e061      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOC)
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	4a36      	ldr	r2, [pc, #216]	; (8000500 <GPIO_Set_PClk+0x20c>)
 8000428:	4293      	cmp	r3, r2
 800042a:	d106      	bne.n	800043a <GPIO_Set_PClk+0x146>
			GPIOC_CLK_DI();
 800042c:	4b32      	ldr	r3, [pc, #200]	; (80004f8 <GPIO_Set_PClk+0x204>)
 800042e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000430:	4a31      	ldr	r2, [pc, #196]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000432:	f023 0304 	bic.w	r3, r3, #4
 8000436:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000438:	e056      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOD)
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	4a31      	ldr	r2, [pc, #196]	; (8000504 <GPIO_Set_PClk+0x210>)
 800043e:	4293      	cmp	r3, r2
 8000440:	d106      	bne.n	8000450 <GPIO_Set_PClk+0x15c>
			GPIOD_CLK_DI();
 8000442:	4b2d      	ldr	r3, [pc, #180]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000444:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000446:	4a2c      	ldr	r2, [pc, #176]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000448:	f023 0308 	bic.w	r3, r3, #8
 800044c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800044e:	e04b      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOE)
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	4a2d      	ldr	r2, [pc, #180]	; (8000508 <GPIO_Set_PClk+0x214>)
 8000454:	4293      	cmp	r3, r2
 8000456:	d106      	bne.n	8000466 <GPIO_Set_PClk+0x172>
			GPIOE_CLK_DI();
 8000458:	4b27      	ldr	r3, [pc, #156]	; (80004f8 <GPIO_Set_PClk+0x204>)
 800045a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800045c:	4a26      	ldr	r2, [pc, #152]	; (80004f8 <GPIO_Set_PClk+0x204>)
 800045e:	f023 0310 	bic.w	r3, r3, #16
 8000462:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000464:	e040      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOF)
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	4a28      	ldr	r2, [pc, #160]	; (800050c <GPIO_Set_PClk+0x218>)
 800046a:	4293      	cmp	r3, r2
 800046c:	d106      	bne.n	800047c <GPIO_Set_PClk+0x188>
			GPIOF_CLK_DI();
 800046e:	4b22      	ldr	r3, [pc, #136]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000470:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000472:	4a21      	ldr	r2, [pc, #132]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000474:	f023 0320 	bic.w	r3, r3, #32
 8000478:	6313      	str	r3, [r2, #48]	; 0x30
}
 800047a:	e035      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOG)
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	4a24      	ldr	r2, [pc, #144]	; (8000510 <GPIO_Set_PClk+0x21c>)
 8000480:	4293      	cmp	r3, r2
 8000482:	d106      	bne.n	8000492 <GPIO_Set_PClk+0x19e>
			GPIOG_CLK_DI();
 8000484:	4b1c      	ldr	r3, [pc, #112]	; (80004f8 <GPIO_Set_PClk+0x204>)
 8000486:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000488:	4a1b      	ldr	r2, [pc, #108]	; (80004f8 <GPIO_Set_PClk+0x204>)
 800048a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800048e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000490:	e02a      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOH)
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	4a1f      	ldr	r2, [pc, #124]	; (8000514 <GPIO_Set_PClk+0x220>)
 8000496:	4293      	cmp	r3, r2
 8000498:	d106      	bne.n	80004a8 <GPIO_Set_PClk+0x1b4>
			GPIOH_CLK_DI();
 800049a:	4b17      	ldr	r3, [pc, #92]	; (80004f8 <GPIO_Set_PClk+0x204>)
 800049c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800049e:	4a16      	ldr	r2, [pc, #88]	; (80004f8 <GPIO_Set_PClk+0x204>)
 80004a0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80004a4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004a6:	e01f      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOI)
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	4a1b      	ldr	r2, [pc, #108]	; (8000518 <GPIO_Set_PClk+0x224>)
 80004ac:	4293      	cmp	r3, r2
 80004ae:	d106      	bne.n	80004be <GPIO_Set_PClk+0x1ca>
			GPIOI_CLK_DI();
 80004b0:	4b11      	ldr	r3, [pc, #68]	; (80004f8 <GPIO_Set_PClk+0x204>)
 80004b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004b4:	4a10      	ldr	r2, [pc, #64]	; (80004f8 <GPIO_Set_PClk+0x204>)
 80004b6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80004ba:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004bc:	e014      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOJ)
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	4a16      	ldr	r2, [pc, #88]	; (800051c <GPIO_Set_PClk+0x228>)
 80004c2:	4293      	cmp	r3, r2
 80004c4:	d106      	bne.n	80004d4 <GPIO_Set_PClk+0x1e0>
			GPIOJ_CLK_DI();
 80004c6:	4b0c      	ldr	r3, [pc, #48]	; (80004f8 <GPIO_Set_PClk+0x204>)
 80004c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004ca:	4a0b      	ldr	r2, [pc, #44]	; (80004f8 <GPIO_Set_PClk+0x204>)
 80004cc:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80004d0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004d2:	e009      	b.n	80004e8 <GPIO_Set_PClk+0x1f4>
		}else if(pGPIOx == GPIOK)
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	4a12      	ldr	r2, [pc, #72]	; (8000520 <GPIO_Set_PClk+0x22c>)
 80004d8:	4293      	cmp	r3, r2
 80004da:	d105      	bne.n	80004e8 <GPIO_Set_PClk+0x1f4>
			GPIOK_CLK_DI();
 80004dc:	4b06      	ldr	r3, [pc, #24]	; (80004f8 <GPIO_Set_PClk+0x204>)
 80004de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004e0:	4a05      	ldr	r2, [pc, #20]	; (80004f8 <GPIO_Set_PClk+0x204>)
 80004e2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80004e6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004e8:	bf00      	nop
 80004ea:	370c      	adds	r7, #12
 80004ec:	46bd      	mov	sp, r7
 80004ee:	bc80      	pop	{r7}
 80004f0:	4770      	bx	lr
 80004f2:	bf00      	nop
 80004f4:	40020000 	.word	0x40020000
 80004f8:	40023800 	.word	0x40023800
 80004fc:	40020400 	.word	0x40020400
 8000500:	40020800 	.word	0x40020800
 8000504:	40020c00 	.word	0x40020c00
 8000508:	40021000 	.word	0x40021000
 800050c:	40021400 	.word	0x40021400
 8000510:	40021800 	.word	0x40021800
 8000514:	40021c00 	.word	0x40021c00
 8000518:	40022000 	.word	0x40022000
 800051c:	40022400 	.word	0x40022400
 8000520:	40022800 	.word	0x40022800

08000524 <GPIO_Init>:

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000524:	b480      	push	{r7}
 8000526:	b083      	sub	sp, #12
 8000528:	af00      	add	r7, sp, #0
 800052a:	6078      	str	r0, [r7, #4]
	if(pGPIOHandle->pinConfig.GPIO_PinMode != GPIO_MODE_AN)
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	795b      	ldrb	r3, [r3, #5]
 8000530:	2b03      	cmp	r3, #3
 8000532:	f000 8082 	beq.w	800063a <GPIO_Init+0x116>
	{
		//1. Configure the mode
		pGPIOHandle->pGPIOx->MODER	&= ~(pGPIOHandle->pinConfig.GPIO_PinMode << (2 * pGPIOHandle->pinConfig.GPIO_PinNumber));//reset
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	681b      	ldr	r3, [r3, #0]
 800053a:	681a      	ldr	r2, [r3, #0]
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	795b      	ldrb	r3, [r3, #5]
 8000540:	4619      	mov	r1, r3
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	791b      	ldrb	r3, [r3, #4]
 8000546:	005b      	lsls	r3, r3, #1
 8000548:	fa01 f303 	lsl.w	r3, r1, r3
 800054c:	43db      	mvns	r3, r3
 800054e:	4619      	mov	r1, r3
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	681b      	ldr	r3, [r3, #0]
 8000554:	400a      	ands	r2, r1
 8000556:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER	|= (pGPIOHandle->pinConfig.GPIO_PinMode << (2 * pGPIOHandle->pinConfig.GPIO_PinNumber));//set
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	681a      	ldr	r2, [r3, #0]
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	795b      	ldrb	r3, [r3, #5]
 8000562:	4619      	mov	r1, r3
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	791b      	ldrb	r3, [r3, #4]
 8000568:	005b      	lsls	r3, r3, #1
 800056a:	fa01 f303 	lsl.w	r3, r1, r3
 800056e:	4619      	mov	r1, r3
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	430a      	orrs	r2, r1
 8000576:	601a      	str	r2, [r3, #0]

		//2. Configure the output type
		pGPIOHandle->pGPIOx->OTYPER &= ~(pGPIOHandle->pinConfig.GPIO_Out_Type << pGPIOHandle->pinConfig.GPIO_PinNumber);//reset
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	681b      	ldr	r3, [r3, #0]
 800057c:	685a      	ldr	r2, [r3, #4]
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	799b      	ldrb	r3, [r3, #6]
 8000582:	4619      	mov	r1, r3
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	791b      	ldrb	r3, [r3, #4]
 8000588:	fa01 f303 	lsl.w	r3, r1, r3
 800058c:	43db      	mvns	r3, r3
 800058e:	4619      	mov	r1, r3
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	400a      	ands	r2, r1
 8000596:	605a      	str	r2, [r3, #4]
		pGPIOHandle->pGPIOx->OTYPER |= (pGPIOHandle->pinConfig.GPIO_Out_Type << pGPIOHandle->pinConfig.GPIO_PinNumber);//set
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	685a      	ldr	r2, [r3, #4]
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	799b      	ldrb	r3, [r3, #6]
 80005a2:	4619      	mov	r1, r3
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	791b      	ldrb	r3, [r3, #4]
 80005a8:	fa01 f303 	lsl.w	r3, r1, r3
 80005ac:	4619      	mov	r1, r3
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	681b      	ldr	r3, [r3, #0]
 80005b2:	430a      	orrs	r2, r1
 80005b4:	605a      	str	r2, [r3, #4]

		//3. Configure the speed
		pGPIOHandle->pGPIOx->OSPEEDR &= ~(pGPIOHandle->pinConfig.GPIO_Out_Speed << (2* pGPIOHandle->pinConfig.GPIO_PinNumber));
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	681b      	ldr	r3, [r3, #0]
 80005ba:	689a      	ldr	r2, [r3, #8]
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	79db      	ldrb	r3, [r3, #7]
 80005c0:	4619      	mov	r1, r3
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	791b      	ldrb	r3, [r3, #4]
 80005c6:	005b      	lsls	r3, r3, #1
 80005c8:	fa01 f303 	lsl.w	r3, r1, r3
 80005cc:	43db      	mvns	r3, r3
 80005ce:	4619      	mov	r1, r3
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	681b      	ldr	r3, [r3, #0]
 80005d4:	400a      	ands	r2, r1
 80005d6:	609a      	str	r2, [r3, #8]
		pGPIOHandle->pGPIOx->OSPEEDR |= (pGPIOHandle->pinConfig.GPIO_Out_Speed << (2* pGPIOHandle->pinConfig.GPIO_PinNumber));
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	689a      	ldr	r2, [r3, #8]
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	79db      	ldrb	r3, [r3, #7]
 80005e2:	4619      	mov	r1, r3
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	791b      	ldrb	r3, [r3, #4]
 80005e8:	005b      	lsls	r3, r3, #1
 80005ea:	fa01 f303 	lsl.w	r3, r1, r3
 80005ee:	4619      	mov	r1, r3
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	430a      	orrs	r2, r1
 80005f6:	609a      	str	r2, [r3, #8]

		//4. Configure Pull-up/Pull-down/No-Pull
		pGPIOHandle->pGPIOx->PUPDR &= ~(pGPIOHandle->pinConfig.GPIO_PuPd << (2* pGPIOHandle->pinConfig.GPIO_PinNumber));
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	68da      	ldr	r2, [r3, #12]
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	7a1b      	ldrb	r3, [r3, #8]
 8000602:	4619      	mov	r1, r3
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	791b      	ldrb	r3, [r3, #4]
 8000608:	005b      	lsls	r3, r3, #1
 800060a:	fa01 f303 	lsl.w	r3, r1, r3
 800060e:	43db      	mvns	r3, r3
 8000610:	4619      	mov	r1, r3
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	681b      	ldr	r3, [r3, #0]
 8000616:	400a      	ands	r2, r1
 8000618:	60da      	str	r2, [r3, #12]
		pGPIOHandle->pGPIOx->PUPDR |= (pGPIOHandle->pinConfig.GPIO_PuPd << (2* pGPIOHandle->pinConfig.GPIO_PinNumber));
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	681b      	ldr	r3, [r3, #0]
 800061e:	68da      	ldr	r2, [r3, #12]
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	7a1b      	ldrb	r3, [r3, #8]
 8000624:	4619      	mov	r1, r3
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	791b      	ldrb	r3, [r3, #4]
 800062a:	005b      	lsls	r3, r3, #1
 800062c:	fa01 f303 	lsl.w	r3, r1, r3
 8000630:	4619      	mov	r1, r3
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	681b      	ldr	r3, [r3, #0]
 8000636:	430a      	orrs	r2, r1
 8000638:	60da      	str	r2, [r3, #12]


	}else{
		//TODO:- Alternate function mode
	}
}
 800063a:	bf00      	nop
 800063c:	370c      	adds	r7, #12
 800063e:	46bd      	mov	sp, r7
 8000640:	bc80      	pop	{r7}
 8000642:	4770      	bx	lr

08000644 <GPIO_Toggle_Output_Pin>:
	pGPIOx -> ODR |= Value;
}


void GPIO_Toggle_Output_Pin(GPIO_RegMap_t *pGPIOx, uint8_t PinNumber)
{
 8000644:	b480      	push	{r7}
 8000646:	b083      	sub	sp, #12
 8000648:	af00      	add	r7, sp, #0
 800064a:	6078      	str	r0, [r7, #4]
 800064c:	460b      	mov	r3, r1
 800064e:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	695b      	ldr	r3, [r3, #20]
 8000654:	78fa      	ldrb	r2, [r7, #3]
 8000656:	2101      	movs	r1, #1
 8000658:	fa01 f202 	lsl.w	r2, r1, r2
 800065c:	405a      	eors	r2, r3
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	615a      	str	r2, [r3, #20]
}
 8000662:	bf00      	nop
 8000664:	370c      	adds	r7, #12
 8000666:	46bd      	mov	sp, r7
 8000668:	bc80      	pop	{r7}
 800066a:	4770      	bx	lr

0800066c <__libc_init_array>:
 800066c:	b570      	push	{r4, r5, r6, lr}
 800066e:	4e0d      	ldr	r6, [pc, #52]	; (80006a4 <__libc_init_array+0x38>)
 8000670:	4c0d      	ldr	r4, [pc, #52]	; (80006a8 <__libc_init_array+0x3c>)
 8000672:	1ba4      	subs	r4, r4, r6
 8000674:	10a4      	asrs	r4, r4, #2
 8000676:	2500      	movs	r5, #0
 8000678:	42a5      	cmp	r5, r4
 800067a:	d109      	bne.n	8000690 <__libc_init_array+0x24>
 800067c:	4e0b      	ldr	r6, [pc, #44]	; (80006ac <__libc_init_array+0x40>)
 800067e:	4c0c      	ldr	r4, [pc, #48]	; (80006b0 <__libc_init_array+0x44>)
 8000680:	f000 f818 	bl	80006b4 <_init>
 8000684:	1ba4      	subs	r4, r4, r6
 8000686:	10a4      	asrs	r4, r4, #2
 8000688:	2500      	movs	r5, #0
 800068a:	42a5      	cmp	r5, r4
 800068c:	d105      	bne.n	800069a <__libc_init_array+0x2e>
 800068e:	bd70      	pop	{r4, r5, r6, pc}
 8000690:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000694:	4798      	blx	r3
 8000696:	3501      	adds	r5, #1
 8000698:	e7ee      	b.n	8000678 <__libc_init_array+0xc>
 800069a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800069e:	4798      	blx	r3
 80006a0:	3501      	adds	r5, #1
 80006a2:	e7f2      	b.n	800068a <__libc_init_array+0x1e>
 80006a4:	080006cc 	.word	0x080006cc
 80006a8:	080006cc 	.word	0x080006cc
 80006ac:	080006cc 	.word	0x080006cc
 80006b0:	080006d0 	.word	0x080006d0

080006b4 <_init>:
 80006b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006b6:	bf00      	nop
 80006b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006ba:	bc08      	pop	{r3}
 80006bc:	469e      	mov	lr, r3
 80006be:	4770      	bx	lr

080006c0 <_fini>:
 80006c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006c2:	bf00      	nop
 80006c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006c6:	bc08      	pop	{r3}
 80006c8:	469e      	mov	lr, r3
 80006ca:	4770      	bx	lr
